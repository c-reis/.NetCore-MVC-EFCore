// <auto-generated />
using System;
using AppCardapio.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AppCardapio.Migrations
{
    [DbContext(typeof(AppCardapioDbContext))]
    partial class AppCardapioDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("AppCardapio.Models.CepCidadeModel", b =>
                {
                    b.Property<int>("Id_cep")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Numero_Cep")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.HasKey("Id_cep");

                    b.ToTable("CepCidades");
                });

            modelBuilder.Entity("AppCardapio.Models.EndCidadeModel", b =>
                {
                    b.Property<int>("Id_cidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Cep_Id")
                        .HasColumnType("integer");

                    b.Property<string>("Nome_Cidade")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.HasKey("Id_cidade");

                    b.HasIndex("Cep_Id");

                    b.ToTable("EndCidade");
                });

            modelBuilder.Entity("AppCardapio.Models.PedidoModel", b =>
                {
                    b.Property<int>("Id_Pedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Data_Hora")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Pessoa_Id")
                        .HasColumnType("integer");

                    b.Property<int>("Restaurante_Id")
                        .HasColumnType("integer");

                    b.HasKey("Id_Pedido");

                    b.HasIndex("Pessoa_Id");

                    b.HasIndex("Restaurante_Id");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("AppCardapio.Models.PessoaModel", b =>
                {
                    b.Property<int>("Id_pessoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Cidade_Id")
                        .HasColumnType("integer");

                    b.Property<string>("Endereco_Bairro")
                        .HasColumnType("text");

                    b.Property<int>("Endereco_Numero")
                        .HasColumnType("integer");

                    b.Property<string>("Endereco_Rua")
                        .HasColumnType("text");

                    b.Property<string>("Nome_Completo")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Telefone1")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<string>("Telefone2")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.HasKey("Id_pessoa");

                    b.HasIndex("Cidade_Id");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("AppCardapio.Models.ProdutoModel", b =>
                {
                    b.Property<int>("Id_produto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descricao_Produto")
                        .HasColumnType("text");

                    b.Property<string>("Nome_Produto")
                        .HasColumnType("text");

                    b.Property<int>("Restaurante_Id")
                        .HasColumnType("integer");

                    b.Property<double>("Valor_Produto")
                        .HasColumnType("double precision");

                    b.HasKey("Id_produto");

                    b.HasIndex("Restaurante_Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("AppCardapio.Models.RestauranteModel", b =>
                {
                    b.Property<int>("Id_restaurante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Cnpj")
                        .HasColumnType("text");

                    b.Property<string>("Nome_restaurante")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("Telefone1")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<string>("Telefone2")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.HasKey("Id_restaurante");

                    b.ToTable("Restaurantes");
                });

            modelBuilder.Entity("PedidoModelProdutoModel", b =>
                {
                    b.Property<int>("PedidoId_Pedido")
                        .HasColumnType("integer");

                    b.Property<int>("ProdutoId_produto")
                        .HasColumnType("integer");

                    b.HasKey("PedidoId_Pedido", "ProdutoId_produto");

                    b.HasIndex("ProdutoId_produto");

                    b.ToTable("PedidoModelProdutoModel");
                });

            modelBuilder.Entity("AppCardapio.Models.EndCidadeModel", b =>
                {
                    b.HasOne("AppCardapio.Models.CepCidadeModel", "CepCidade")
                        .WithMany()
                        .HasForeignKey("Cep_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CepCidade");
                });

            modelBuilder.Entity("AppCardapio.Models.PedidoModel", b =>
                {
                    b.HasOne("AppCardapio.Models.PessoaModel", "Pessoa")
                        .WithMany("Pedido")
                        .HasForeignKey("Pessoa_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppCardapio.Models.RestauranteModel", "Restaurante")
                        .WithMany()
                        .HasForeignKey("Restaurante_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");

                    b.Navigation("Restaurante");
                });

            modelBuilder.Entity("AppCardapio.Models.PessoaModel", b =>
                {
                    b.HasOne("AppCardapio.Models.EndCidadeModel", "Endcidade")
                        .WithMany("Pessoa")
                        .HasForeignKey("Cidade_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endcidade");
                });

            modelBuilder.Entity("AppCardapio.Models.ProdutoModel", b =>
                {
                    b.HasOne("AppCardapio.Models.RestauranteModel", "Restaurante")
                        .WithMany("Produto")
                        .HasForeignKey("Restaurante_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurante");
                });

            modelBuilder.Entity("PedidoModelProdutoModel", b =>
                {
                    b.HasOne("AppCardapio.Models.PedidoModel", null)
                        .WithMany()
                        .HasForeignKey("PedidoId_Pedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppCardapio.Models.ProdutoModel", null)
                        .WithMany()
                        .HasForeignKey("ProdutoId_produto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppCardapio.Models.EndCidadeModel", b =>
                {
                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("AppCardapio.Models.PessoaModel", b =>
                {
                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("AppCardapio.Models.RestauranteModel", b =>
                {
                    b.Navigation("Produto");
                });
#pragma warning restore 612, 618
        }
    }
}
